{"version":3,"file":"backbone2.js","sources":["src/events.js","src/view.js","src/model.js","src/collection.js","src/index.js"],"sourcesContent":["// A module that can be mixed in to *any object* in order to provide it with\n// a custom event channel. You may bind a callback to an event with `on` or\n// remove with `off`; `trigger`-ing an event fires all callbacks in\n// succession.\n//\n//     var object = {};\n//     _.extend(object, Backbone.Events);\n//     object.on('expand', function(){ alert('expanded'); });\n//     object.trigger('expand');\n\n// Regular expression used to split event strings.\nconst eventSplitter = /\\s+/;\n\n// A private global variable to share between listeners and listenees.\nlet _listening;\n\n// Iterates over the standard `event, callback` (as well as the fancy multiple\n// space-separated events `\"change blur\", callback` and jQuery-style event\n// maps `{event: callback}`).\nfunction eventsApi(iteratee, events, name, callback, opts) {\n  var i = 0, names;\n  if (name && typeof name === 'object') {\n    // Handle event maps.\n    if (callback !== void 0 && 'context' in opts && opts.context === void 0) opts.context = callback;\n    for (names = _.keys(name); i < names.length ; i++) {\n      events = eventsApi(iteratee, events, names[i], name[names[i]], opts);\n    }\n  } else if (name && eventSplitter.test(name)) {\n    // Handle space-separated event names by delegating them individually.\n    for (names = name.split(eventSplitter); i < names.length; i++) {\n      events = iteratee(events, names[i], callback, opts);\n    }\n  } else {\n    // Finally, standard events.\n    events = iteratee(events, name, callback, opts);\n  }\n  return events;\n};\n\n// The reducing API that adds a callback to the `events` object.\nfunction onApi(events, name, callback, options) {\n    if (callback) {\n      var handlers = events[name] || (events[name] = []);\n      var context = options.context, ctx = options.ctx, listening = options.listening;\n      if (listening) listening.count++;\n\n      handlers.push({callback: callback, context: context, ctx: context || ctx, listening: listening});\n    }\n    return events;\n  };\n\n// An try-catch guarded #on function, to prevent poisoning the global\n// `_listening` variable.\nfunction tryCatchOn(obj, name, callback, context) {\n  try {\n    obj.on(name, callback, context);\n  } catch (e) {\n    return e;\n  }\n};\n\n// The reducing API that removes a callback from the `events` object.\nfunction offApi(events, name, callback, options) {\n  if (!events) return;\n\n  var context = options.context, listeners = options.listeners;\n  var i = 0, names;\n\n  // Delete all event listeners and \"drop\" events.\n  if (!name && !context && !callback) {\n    for (names = _.keys(listeners); i < names.length; i++) {\n      listeners[names[i]].cleanup();\n    }\n    return;\n  }\n\n  names = name ? [name] : _.keys(events);\n  for (; i < names.length; i++) {\n    name = names[i];\n    var handlers = events[name];\n\n    // Bail out if there are no events stored.\n    if (!handlers) break;\n\n    // Find any remaining events.\n    var remaining = [];\n    for (var j = 0; j < handlers.length; j++) {\n      var handler = handlers[j];\n      if (\n        callback && callback !== handler.callback &&\n          callback !== handler.callback._callback ||\n            context && context !== handler.context\n      ) {\n        remaining.push(handler);\n      } else {\n        var listening = handler.listening;\n        if (listening) listening.off(name, callback);\n      }\n    }\n\n    // Replace events if there are any remaining.  Otherwise, clean up.\n    if (remaining.length) {\n      events[name] = remaining;\n    } else {\n      delete events[name];\n    }\n  }\n\n  return events;\n};\n\n// Reduces the event callbacks into a map of `{event: onceWrapper}`.\n// `offer` unbinds the `onceWrapper` after it has been called.\nfunction onceMap(map, name, callback, offer) {\n  if (callback) {\n    var once = map[name] = _.once(function() {\n      offer(name, once);\n      callback.apply(this, arguments);\n    });\n    once._callback = callback;\n  }\n  return map;\n};\n\n// Handles triggering the appropriate event callbacks.\nfunction triggerApi(objEvents, name, callback, args) {\n  if (objEvents) {\n    var events = objEvents[name];\n    var allEvents = objEvents.all;\n    if (events && allEvents) allEvents = allEvents.slice();\n    if (events) triggerEvents(events, args);\n    if (allEvents) triggerEvents(allEvents, [name].concat(args));\n  }\n  return objEvents;\n};\n\n// A difficult-to-believe, but optimized internal dispatch function for\n// triggering events. Tries to keep the usual cases speedy (most internal\n// Backbone events have 3 arguments).\nfunction triggerEvents(events, args) {\n  var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];\n  switch (args.length) {\n    case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx); return;\n    case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1); return;\n    case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2); return;\n    case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); return;\n    default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args); return;\n  }\n};\n\n\n// A listening class that tracks and cleans up memory bindings\n// when all callbacks have been offed.\nclass Listening {\n  constructor(listener, obj) {\n    this.id = listener._listenId;\n    this.listener = listener;\n    this.obj = obj;\n    this.interop = true;\n    this.count = 0;\n    this._events = void 0;\n    this.on = Events.on;\n  }\n\n\n  // Offs a callback (or several).\n  // Uses an optimized counter if the listenee uses Backbone.Events.\n  // Otherwise, falls back to manual tracking to support events\n  // library interop.\n  off(name, callback) {\n    var cleanup;\n    if (this.interop) {\n      this._events = eventsApi(offApi, this._events, name, callback, {\n        context: void 0,\n        listeners: void 0\n      });\n      cleanup = !this._events;\n    } else {\n      this.count--;\n      cleanup = this.count === 0;\n    }\n    if (cleanup) this.cleanup();\n  }\n\n  // Cleans up memory bindings between the listener and the listenee.\n  cleanup() {\n    delete this.listener._listeningTo[this.obj._listenId];\n    if (!this.interop) delete this.obj._listeners[this.id];\n  };\n}\n\n\nconst Events = {\n  // Bind an event to a `callback` function. Passing `\"all\"` will bind\n  // the callback to all events fired.\n  on(name, callback, context) {\n    this._events = eventsApi(onApi, this._events || {}, name, callback, {\n      context: context,\n      ctx: this,\n      listening: _listening\n    });\n\n    if (_listening) {\n      var listeners = this._listeners || (this._listeners = {});\n      listeners[_listening.id] = _listening;\n      // Allow the listening to use a counter, instead of tracking\n      // callbacks for library interop\n      _listening.interop = false;\n    }\n\n    return this;\n  },\n\n  // Inversion-of-control versions of `on`. Tell *this* object to listen to\n  // an event in another object... keeping track of what it's listening to\n  // for easier unbinding later.\n  listenTo(obj, name, callback) {\n    if (!obj) return this;\n    var id = obj._listenId || (obj._listenId = _.uniqueId('l'));\n    var listeningTo = this._listeningTo || (this._listeningTo = {});\n    var listening = _listening = listeningTo[id];\n\n    // This object is not listening to any other events on `obj` yet.\n    // Setup the necessary references to track the listening callbacks.\n    if (!listening) {\n      this._listenId || (this._listenId = _.uniqueId('l'));\n      listening = _listening = listeningTo[id] = new Listening(this, obj);\n    }\n\n    // Bind callbacks on obj.\n    var error = tryCatchOn(obj, name, callback, this);\n    _listening = void 0;\n\n    if (error) throw error;\n    // If the target obj is not Backbone.Events, track events manually.\n    if (listening.interop) listening.on(name, callback);\n\n    return this;\n  },\n\n  // Remove one or many callbacks. If `context` is null, removes all\n  // callbacks with that function. If `callback` is null, removes all\n  // callbacks for the event. If `name` is null, removes all bound\n  // callbacks for all events.\n  off(name, callback, context) {\n    if (!this._events) return this;\n    this._events = eventsApi(offApi, this._events, name, callback, {\n      context: context,\n      listeners: this._listeners\n    });\n\n    return this;\n  },\n\n  // Tell this object to stop listening to either specific events ... or\n  // to every object it's currently listening to.\n  stopListening(obj, name, callback) {\n    var listeningTo = this._listeningTo;\n    if (!listeningTo) return this;\n\n    var ids = obj ? [obj._listenId] : _.keys(listeningTo);\n    for (var i = 0; i < ids.length; i++) {\n      var listening = listeningTo[ids[i]];\n\n      // If listening doesn't exist, this object is not currently\n      // listening to obj. Break out early.\n      if (!listening) break;\n\n      listening.obj.off(name, callback, this);\n      if (listening.interop) listening.off(name, callback);\n    }\n    if (_.isEmpty(listeningTo)) this._listeningTo = void 0;\n\n    return this;\n  },\n\n  // Bind an event to only be triggered a single time. After the first time\n  // the callback is invoked, its listener will be removed. If multiple events\n  // are passed in using the space-separated syntax, the handler will fire\n  // once for each event, not once for a combination of all events.\n  once(name, callback, context) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.off, this));\n    if (typeof name === 'string' && context == null) callback = void 0;\n    return this.on(events, callback, context);\n  },\n\n  // Inversion-of-control versions of `once`.\n  listenToOnce(obj, name, callback) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.stopListening, this, obj));\n    return this.listenTo(obj, events);\n  },\n\n  // Trigger one or many events, firing all bound callbacks. Callbacks are\n  // passed the same arguments as `trigger` is, apart from the event name\n  // (unless you're listening on `\"all\"`, which will cause your callback to\n  // receive the true name of the event as the first argument).\n  trigger(name) {\n    if (!this._events) return this;\n\n    var length = Math.max(0, arguments.length - 1);\n    var args = Array(length);\n    for (var i = 0; i < length; i++) args[i] = arguments[i + 1];\n\n    eventsApi(triggerApi, this._events, name, void 0, args);\n    return this;\n  },\n}\n\n// Aliases for backwards compatibility.\nEvents.bind   = Events.on;\nEvents.unbind = Events.off;\n\nexport default Events;\n","const View = {\n\n};\n\nexport default View;\n","// Backbone.Model\n// --------------\n\n// Backbone **Models** are the basic data object in the framework --\n// frequently representing a row in a table in a database on your server.\n// A discrete chunk of data and a bunch of useful, related methods for\n// performing computations and transformations on that data.\n\n// Create a new model with the specified attributes. A client id (`cid`)\n// is automatically generated and assigned for you.\n\n\n\nclass Model{\n  constructor() {\n    var attrs = attributes || {};\n    options || (options = {});\n    this.preinitialize.apply(this, arguments);\n    this.cid = _.uniqueId(this.cidPrefix);\n    this.attributes = {};\n    if (options.collection) this.collection = options.collection;\n    if (options.parse) attrs = this.parse(attrs, options) || {};\n    var defaults = _.result(this, 'defaults');\n    attrs = _.defaults(_.extend({}, defaults, attrs), defaults);\n    this.set(attrs, options);\n    this.changed = {};\n    this.initialize.apply(this, arguments);\n\n    // A hash of attributes whose current and previous value differ.\n    this.changed = null;\n\n    // The value returned during the last failed validation.\n    this.validationError = null;\n\n    // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\n    // CouchDB users may want to set this to `\"_id\"`.\n    this.idAttribute = 'id';\n\n    // The prefix is used to create the client id which is used to identify models locally.\n    // You may want to override this if you're experiencing name clashes with model ids.\n    this.cidPrefix = 'c';\n  }\n\n  // preinitialize is an empty function by default. You can override it with a function\n  // or object.  preinitialize will run before any instantiation logic is run in the Model.\n  preinitialize() {}\n\n  // Initialize is an empty function by default. Override it with your own\n  // initialization logic.\n  initialize() {}\n\n  // Return a copy of the model's `attributes` object.\n  toJSON(options) {\n    return _.clone(this.attributes);\n  }\n\n  // Proxy `Backbone.sync` by default -- but override this if you need\n  // custom syncing semantics for *this* particular model.\n  sync() {\n    return Backbone.sync.apply(this, arguments);\n  }\n\n  // Get the value of an attribute.\n  get(attr) {\n    return this.attributes[attr];\n  }\n\n  // Get the HTML-escaped value of an attribute.\n  escape(attr) {\n    return _.escape(this.get(attr));\n  }\n\n  // Returns `true` if the attribute contains a value that is not null\n  // or undefined.\n  has(attr) {\n    return this.get(attr) != null;\n  }\n\n  // Special-cased proxy to underscore's `_.matches` method.\n  matches(attrs) {\n    return !!_.iteratee(attrs, this)(this.attributes);\n  }\n\n  // Set a hash of model attributes on the object, firing `\"change\"`. This is\n  // the core primitive operation of a model, updating the data and notifying\n  // anyone who needs to know about the change in state. The heart of the beast.\n  set(key, val, options) {\n    if (key == null) return this;\n\n    // Handle both `\"key\", value` and `{key: value}` -style arguments.\n    var attrs;\n    if (typeof key === 'object') {\n      attrs = key;\n      options = val;\n    } else {\n      (attrs = {})[key] = val;\n    }\n\n    options || (options = {});\n\n    // Run validation.\n    if (!this._validate(attrs, options)) return false;\n\n    // Extract attributes and options.\n    var unset      = options.unset;\n    var silent     = options.silent;\n    var changes    = [];\n    var changing   = this._changing;\n    this._changing = true;\n\n    if (!changing) {\n      this._previousAttributes = _.clone(this.attributes);\n      this.changed = {};\n    }\n\n    var current = this.attributes;\n    var changed = this.changed;\n    var prev    = this._previousAttributes;\n\n    // For each `set` attribute, update or delete the current value.\n    for (var attr in attrs) {\n      val = attrs[attr];\n      if (!_.isEqual(current[attr], val)) changes.push(attr);\n      if (!_.isEqual(prev[attr], val)) {\n        changed[attr] = val;\n      } else {\n        delete changed[attr];\n      }\n      unset ? delete current[attr] : current[attr] = val;\n    }\n\n    // Update the `id`.\n    if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\n\n    // Trigger all relevant attribute changes.\n    if (!silent) {\n      if (changes.length) this._pending = options;\n      for (var i = 0; i < changes.length; i++) {\n        this.trigger('change:' + changes[i], this, current[changes[i]], options);\n      }\n    }\n\n    // You might be wondering why there's a `while` loop here. Changes can\n    // be recursively nested within `\"change\"` events.\n    if (changing) return this;\n    if (!silent) {\n      while (this._pending) {\n        options = this._pending;\n        this._pending = false;\n        this.trigger('change', this, options);\n      }\n    }\n    this._pending = false;\n    this._changing = false;\n    return this;\n  }\n\n  // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\n  // if the attribute doesn't exist.\n  unset(attr, options) {\n    return this.set(attr, void 0, _.extend({}, options, {unset: true}));\n  }\n\n  // Clear all attributes on the model, firing `\"change\"`.\n  clear(options) {\n    var attrs = {};\n    for (var key in this.attributes) attrs[key] = void 0;\n    return this.set(attrs, _.extend({}, options, {unset: true}));\n  }\n\n  // Determine if the model has changed since the last `\"change\"` event.\n  // If you specify an attribute name, determine if that attribute has changed.\n  hasChanged(attr) {\n    if (attr == null) return !_.isEmpty(this.changed);\n    return _.has(this.changed, attr);\n  }\n\n  // Return an object containing all the attributes that have changed, or\n  // false if there are no changed attributes. Useful for determining what\n  // parts of a view need to be updated and/or what attributes need to be\n  // persisted to the server. Unset attributes will be set to undefined.\n  // You can also pass an attributes object to diff against the model,\n  // determining if there *would be* a change.\n  changedAttributes(diff) {\n    if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;\n    var old = this._changing ? this._previousAttributes : this.attributes;\n    var changed = {};\n    var hasChanged;\n    for (var attr in diff) {\n      var val = diff[attr];\n      if (_.isEqual(old[attr], val)) continue;\n      changed[attr] = val;\n      hasChanged = true;\n    }\n    return hasChanged ? changed : false;\n  }\n\n  // Get the previous value of an attribute, recorded at the time the last\n  // `\"change\"` event was fired.\n  previous(attr) {\n    if (attr == null || !this._previousAttributes) return null;\n    return this._previousAttributes[attr];\n  }\n\n  // Get all of the attributes of the model at the time of the previous\n  // `\"change\"` event.\n  previousAttributes() {\n    return _.clone(this._previousAttributes);\n  }\n\n  // Fetch the model from the server, merging the response with the model's\n  // local attributes. Any changed attributes will trigger a \"change\" event.\n  fetch(options) {\n    options = _.extend({parse: true}, options);\n    var model = this;\n    var success = options.success;\n    options.success = function(resp) {\n      var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n      if (!model.set(serverAttrs, options)) return false;\n      if (success) success.call(options.context, model, resp, options);\n      model.trigger('sync', model, resp, options);\n    };\n    wrapError(this, options);\n    return this.sync('read', this, options);\n  }\n\n  // Set a hash of model attributes, and sync the model to the server.\n  // If the server returns an attributes hash that differs, the model's\n  // state will be `set` again.\n  save(key, val, options) {\n    // Handle both `\"key\", value` and `{key: value}` -style arguments.\n    var attrs;\n    if (key == null || typeof key === 'object') {\n      attrs = key;\n      options = val;\n    } else {\n      (attrs = {})[key] = val;\n    }\n\n    options = _.extend({validate: true, parse: true}, options);\n    var wait = options.wait;\n\n    // If we're not waiting and attributes exist, save acts as\n    // `set(attr).save(null, opts)` with validation. Otherwise, check if\n    // the model will be valid when the attributes, if any, are set.\n    if (attrs && !wait) {\n      if (!this.set(attrs, options)) return false;\n    } else if (!this._validate(attrs, options)) {\n      return false;\n    }\n\n    // After a successful server-side save, the client is (optionally)\n    // updated with the server-side state.\n    var model = this;\n    var success = options.success;\n    var attributes = this.attributes;\n    options.success = function(resp) {\n      // Ensure attributes are restored during synchronous saves.\n      model.attributes = attributes;\n      var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n      if (wait) serverAttrs = _.extend({}, attrs, serverAttrs);\n      if (serverAttrs && !model.set(serverAttrs, options)) return false;\n      if (success) success.call(options.context, model, resp, options);\n      model.trigger('sync', model, resp, options);\n    };\n    wrapError(this, options);\n\n    // Set temporary attributes if `{wait: true}` to properly find new ids.\n    if (attrs && wait) this.attributes = _.extend({}, attributes, attrs);\n\n    var method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\n    if (method === 'patch' && !options.attrs) options.attrs = attrs;\n    var xhr = this.sync(method, this, options);\n\n    // Restore attributes.\n    this.attributes = attributes;\n\n    return xhr;\n  }\n\n  // Destroy this model on the server if it was already persisted.\n  // Optimistically removes the model from its collection, if it has one.\n  // If `wait: true` is passed, waits for the server to respond before removal.\n  destroy(options) {\n    options = options ? _.clone(options) : {};\n    var model = this;\n    var success = options.success;\n    var wait = options.wait;\n\n    var destroy = function() {\n      model.stopListening();\n      model.trigger('destroy', model, model.collection, options);\n    };\n\n    options.success = function(resp) {\n      if (wait) destroy();\n      if (success) success.call(options.context, model, resp, options);\n      if (!model.isNew()) model.trigger('sync', model, resp, options);\n    };\n\n    var xhr = false;\n    if (this.isNew()) {\n      _.defer(options.success);\n    } else {\n      wrapError(this, options);\n      xhr = this.sync('delete', this, options);\n    }\n    if (!wait) destroy();\n    return xhr;\n  }\n\n  // Default URL for the model's representation on the server -- if you're\n  // using Backbone's restful methods, override this to change the endpoint\n  // that will be called.\n  url() {\n    var base =\n      _.result(this, 'urlRoot') ||\n      _.result(this.collection, 'url') ||\n      urlError();\n    if (this.isNew()) return base;\n    var id = this.get(this.idAttribute);\n    return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\n  }\n\n  // **parse** converts a response into the hash of attributes to be `set` on\n  // the model. The default implementation is just to pass the response along.\n  parse(resp, options) {\n    return resp;\n  }\n\n  // Create a new model with identical attributes to this one.\n  clone() {\n    return new this.constructor(this.attributes);\n  }\n\n  // A model is new if it has never been saved to the server, and lacks an id.\n  isNew() {\n    return !this.has(this.idAttribute);\n  }\n\n  // Check if the model is currently in a valid state.\n  isValid(options) {\n    return this._validate({}, _.extend({}, options, {validate: true}));\n  }\n\n  // Run validation against the next complete set of model attributes,\n  // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\n  _validate(attrs, options) {\n    if (!options.validate || !this.validate) return true;\n    attrs = _.extend({}, this.attributes, attrs);\n    var error = this.validationError = this.validate(attrs, options) || null;\n    if (!error) return true;\n    this.trigger('invalid', this, error, _.extend(options, {validationError: error}));\n    return false;\n  }\n};\n\nexport default Model;\n","// Backbone.Collection\n  // -------------------\n\n  // If models tend to represent a single row of data, a Backbone Collection is\n  // more analogous to a table full of data ... or a small slice or page of that\n  // table, or a collection of rows that belong together for a particular reason\n  // -- all of the messages in this particular folder, all of the documents\n  // belonging to this particular author, and so on. Collections maintain\n  // indexes of their models, both in order, and for lookup by `id`.\n\n  // Create a new **Collection**, perhaps to contain a specific type of `model`.\n  // If a `comparator` is specified, the Collection will maintain\n  // its models in sort order, as they're added and removed.\n\n// Defining an @@iterator method implements JavaScript's Iterable protocol.\n// In modern ES2015 browsers, this value is found at Symbol.iterator.\n/* global Symbol */\nvar $$iterator = typeof Symbol === 'function' && Symbol.iterator;\nif ($$iterator) {\n  Collection.prototype[$$iterator] = Collection.prototype.values;\n}\n\n// CollectionIterator\n// ------------------\n\n// A CollectionIterator implements JavaScript's Iterator protocol, allowing the\n// use of `for of` loops in modern browsers and interoperation between\n// Backbone.Collection and other JavaScript functions and third-party libraries\n// which can operate on Iterables.\nfunction CollectionIterator(collection, kind) {\n  this._collection = collection;\n  this._kind = kind;\n  this._index = 0;\n};\n\n// This \"enum\" defines the three possible kinds of values which can be emitted\n// by a CollectionIterator that correspond to the values(), keys() and entries()\n// methods on Collection, respectively.\nvar ITERATOR_VALUES = 1;\nvar ITERATOR_KEYS = 2;\nvar ITERATOR_KEYSVALUES = 3;\n\n// All Iterators should themselves be Iterable.\nif ($$iterator) {\n  CollectionIterator.prototype[$$iterator] = function() {\n    return this;\n  };\n}\n\nCollectionIterator.prototype.next = function() {\n  if (this._collection) {\n\n    // Only continue iterating if the iterated collection is long enough.\n    if (this._index < this._collection.length) {\n      var model = this._collection.at(this._index);\n      this._index++;\n\n      // Construct a value depending on what kind of values should be iterated.\n      var value;\n      if (this._kind === ITERATOR_VALUES) {\n        value = model;\n      } else {\n        var id = this._collection.modelId(model.attributes);\n        if (this._kind === ITERATOR_KEYS) {\n          value = id;\n        } else { // ITERATOR_KEYSVALUES\n          value = [id, model];\n        }\n      }\n      return {value: value, done: false};\n    }\n\n    // Once exhausted, remove the reference to the collection so future\n    // calls to the next method always return done.\n    this._collection = void 0;\n  }\n\n  return {value: void 0, done: true};\n};\n\nclass Collection{\n  constructor(models, options) {\n    options || (options = {});\n    this.preinitialize.apply(this, arguments);\n    if (options.model) this.model = options.model;\n    if (options.comparator !== void 0) this.comparator = options.comparator;\n    this._reset();\n    this.initialize.apply(this, arguments);\n    if (models) this.reset(models, _.extend({silent: true}, options));\n\n    this.setOptions = {add: true, remove: true, merge: true};\n    this.addOptions = {add: true, remove: false};\n\n    // The default model for a collection is just a **Backbone.Model**.\n    // This should be overridden in most cases.\n    this.model = Model;\n  }\n\n  // preinitialize is an empty function by default. You can override it with a function\n  // or object.  preinitialize will run before any instantiation logic is run in the Collection.\n  preinitialize() {}\n\n  // Initialize is an empty function by default. Override it with your own\n  // initialization logic.\n  initialize() {}\n\n  // The JSON representation of a Collection is an array of the\n  // models' attributes.\n  toJSON(options) {\n    return this.map(function(model) { return model.toJSON(options); });\n  }\n\n  // Proxy `Backbone.sync` by default.\n  sync() {\n    return Backbone.sync.apply(this, arguments);\n  }\n\n  // Add a model, or list of models to the set. `models` may be Backbone\n  // Models or raw JavaScript objects to be converted to Models, or any\n  // combination of the two.\n  add(models, options) {\n    return this.set(models, _.extend({merge: false}, options, addOptions));\n  }\n\n  // Remove a model, or a list of models from the set.\n  remove(models, options) {\n    options = _.extend({}, options);\n    var singular = !_.isArray(models);\n    models = singular ? [models] : models.slice();\n    var removed = this._removeModels(models, options);\n    if (!options.silent && removed.length) {\n      options.changes = {added: [], merged: [], removed: removed};\n      this.trigger('update', this, options);\n    }\n    return singular ? removed[0] : removed;\n  }\n\n  // Update a collection by `set`-ing a new list of models, adding new ones,\n  // removing models that are no longer present, and merging models that\n  // already exist in the collection, as necessary. Similar to **Model#set**,\n  // the core operation for updating the data contained by the collection.\n  set(models, options) {\n    if (models == null) return;\n\n    options = _.extend({}, setOptions, options);\n    if (options.parse && !this._isModel(models)) {\n      models = this.parse(models, options) || [];\n    }\n\n    var singular = !_.isArray(models);\n    models = singular ? [models] : models.slice();\n\n    var at = options.at;\n    if (at != null) at = +at;\n    if (at > this.length) at = this.length;\n    if (at < 0) at += this.length + 1;\n\n    var set = [];\n    var toAdd = [];\n    var toMerge = [];\n    var toRemove = [];\n    var modelMap = {};\n\n    var add = options.add;\n    var merge = options.merge;\n    var remove = options.remove;\n\n    var sort = false;\n    var sortable = this.comparator && at == null && options.sort !== false;\n    var sortAttr = _.isString(this.comparator) ? this.comparator : null;\n\n    // Turn bare objects into model references, and prevent invalid models\n    // from being added.\n    var model, i;\n    for (i = 0; i < models.length; i++) {\n      model = models[i];\n\n      // If a duplicate is found, prevent it from being added and\n      // optionally merge it into the existing model.\n      var existing = this.get(model);\n      if (existing) {\n        if (merge && model !== existing) {\n          var attrs = this._isModel(model) ? model.attributes : model;\n          if (options.parse) attrs = existing.parse(attrs, options);\n          existing.set(attrs, options);\n          toMerge.push(existing);\n          if (sortable && !sort) sort = existing.hasChanged(sortAttr);\n        }\n        if (!modelMap[existing.cid]) {\n          modelMap[existing.cid] = true;\n          set.push(existing);\n        }\n        models[i] = existing;\n\n      // If this is a new, valid model, push it to the `toAdd` list.\n      } else if (add) {\n        model = models[i] = this._prepareModel(model, options);\n        if (model) {\n          toAdd.push(model);\n          this._addReference(model, options);\n          modelMap[model.cid] = true;\n          set.push(model);\n        }\n      }\n    }\n\n    // Remove stale models.\n    if (remove) {\n      for (i = 0; i < this.length; i++) {\n        model = this.models[i];\n        if (!modelMap[model.cid]) toRemove.push(model);\n      }\n      if (toRemove.length) this._removeModels(toRemove, options);\n    }\n\n    // See if sorting is needed, update `length` and splice in new models.\n    var orderChanged = false;\n    var replace = !sortable && add && remove;\n    if (set.length && replace) {\n      orderChanged = this.length !== set.length || _.some(this.models, function(m, index) {\n        return m !== set[index];\n      });\n      this.models.length = 0;\n      splice(this.models, set, 0);\n      this.length = this.models.length;\n    } else if (toAdd.length) {\n      if (sortable) sort = true;\n      splice(this.models, toAdd, at == null ? this.length : at);\n      this.length = this.models.length;\n    }\n\n    // Silently sort the collection if appropriate.\n    if (sort) this.sort({silent: true});\n\n    // Unless silenced, it's time to fire all appropriate add/sort/update events.\n    if (!options.silent) {\n      for (i = 0; i < toAdd.length; i++) {\n        if (at != null) options.index = at + i;\n        model = toAdd[i];\n        model.trigger('add', model, this, options);\n      }\n      if (sort || orderChanged) this.trigger('sort', this, options);\n      if (toAdd.length || toRemove.length || toMerge.length) {\n        options.changes = {\n          added: toAdd,\n          removed: toRemove,\n          merged: toMerge\n        };\n        this.trigger('update', this, options);\n      }\n    }\n\n    // Return the added (or merged) model (or models).\n    return singular ? models[0] : models;\n  }\n\n  // When you have more items than you want to add or remove individually,\n  // you can reset the entire set with a new list of models, without firing\n  // any granular `add` or `remove` events. Fires `reset` when finished.\n  // Useful for bulk operations and optimizations.\n  reset(models, options) {\n    options = options ? _.clone(options) : {};\n    for (var i = 0; i < this.models.length; i++) {\n      this._removeReference(this.models[i], options);\n    }\n    options.previousModels = this.models;\n    this._reset();\n    models = this.add(models, _.extend({silent: true}, options));\n    if (!options.silent) this.trigger('reset', this, options);\n    return models;\n  }\n\n  // Add a model to the end of the collection.\n  push(model, options) {\n    return this.add(model, _.extend({at: this.length}, options));\n  }\n\n  // Remove a model from the end of the collection.\n  pop(options) {\n    var model = this.at(this.length - 1);\n    return this.remove(model, options);\n  }\n\n  // Add a model to the beginning of the collection.\n  unshift(model, options) {\n    return this.add(model, _.extend({at: 0}, options));\n  }\n\n  // Remove a model from the beginning of the collection.\n  shift(options) {\n    var model = this.at(0);\n    return this.remove(model, options);\n  }\n\n  // Slice out a sub-array of models from the collection.\n  slice() {\n    return slice.apply(this.models, arguments);\n  }\n\n  // Get a model from the set by id, cid, model object with id or cid\n  // properties, or an attributes object that is transformed through modelId.\n  get(obj) {\n    if (obj == null) return void 0;\n    return this._byId[obj] ||\n      this._byId[this.modelId(this._isModel(obj) ? obj.attributes : obj)] ||\n      obj.cid && this._byId[obj.cid];\n  }\n\n  // Returns `true` if the model is in the collection.\n  has(obj) {\n    return this.get(obj) != null;\n  }\n\n  // Get the model at the given index.\n  at(index) {\n    if (index < 0) index += this.length;\n    return this.models[index];\n  }\n\n  // Return models with matching attributes. Useful for simple cases of\n  // `filter`.\n  where(attrs, first) {\n    return this[first ? 'find' : 'filter'](attrs);\n  }\n\n  // Return the first model with matching attributes. Useful for simple cases\n  // of `find`.\n  findWhere(attrs) {\n    return this.where(attrs, true);\n  }\n\n  // Force the collection to re-sort itself. You don't need to call this under\n  // normal circumstances, as the set will maintain sort order as each item\n  // is added.\n  sort(options) {\n    var comparator = this.comparator;\n    if (!comparator) throw new Error('Cannot sort a set without a comparator');\n    options || (options = {});\n\n    var length = comparator.length;\n    if (_.isFunction(comparator)) comparator = _.bind(comparator, this);\n\n    // Run sort based on type of `comparator`.\n    if (length === 1 || _.isString(comparator)) {\n      this.models = this.sortBy(comparator);\n    } else {\n      this.models.sort(comparator);\n    }\n    if (!options.silent) this.trigger('sort', this, options);\n    return this;\n  }\n\n  // Pluck an attribute from each model in the collection.\n  pluck(attr) {\n    return this.map(attr + '');\n  }\n\n  // Fetch the default set of models for this collection, resetting the\n  // collection when they arrive. If `reset: true` is passed, the response\n  // data will be passed through the `reset` method instead of `set`.\n  fetch(options) {\n    options = _.extend({parse: true}, options);\n    var success = options.success;\n    var collection = this;\n    options.success = function(resp) {\n      var method = options.reset ? 'reset' : 'set';\n      collection[method](resp, options);\n      if (success) success.call(options.context, collection, resp, options);\n      collection.trigger('sync', collection, resp, options);\n    };\n    wrapError(this, options);\n    return this.sync('read', this, options);\n  }\n\n  // Create a new instance of a model in this collection. Add the model to the\n  // collection immediately, unless `wait: true` is passed, in which case we\n  // wait for the server to agree.\n  create(model, options) {\n    options = options ? _.clone(options) : {};\n    var wait = options.wait;\n    model = this._prepareModel(model, options);\n    if (!model) return false;\n    if (!wait) this.add(model, options);\n    var collection = this;\n    var success = options.success;\n    options.success = function(m, resp, callbackOpts) {\n      if (wait) collection.add(m, callbackOpts);\n      if (success) success.call(callbackOpts.context, m, resp, callbackOpts);\n    };\n    model.save(null, options);\n    return model;\n  }\n\n  // **parse** converts a response into a list of models to be added to the\n  // collection. The default implementation is just to pass it through.\n  parse(resp, options) {\n    return resp;\n  }\n\n  // Create a new collection with an identical list of models as this one.\n  clone() {\n    return new this.constructor(this.models, {\n      model: this.model,\n      comparator: this.comparator\n    });\n  }\n\n  // Define how to uniquely identify models in the collection.\n  modelId(attrs) {\n    return attrs[this.model.prototype.idAttribute || 'id'];\n  }\n\n  // Get an iterator of all models in this collection.\n  values() {\n    return new CollectionIterator(this, ITERATOR_VALUES);\n  }\n\n  // Get an iterator of all model IDs in this collection.\n  keys() {\n    return new CollectionIterator(this, ITERATOR_KEYS);\n  }\n\n  // Get an iterator of all [ID, model] tuples in this collection.\n  entries() {\n    return new CollectionIterator(this, ITERATOR_KEYSVALUES);\n  }\n\n  // Private method to reset all internal state. Called when the collection\n  // is first initialized or reset.\n  _reset() {\n    this.length = 0;\n    this.models = [];\n    this._byId  = {};\n  }\n\n  // Prepare a hash of attributes (or other model) to be added to this\n  // collection.\n  _prepareModel(attrs, options) {\n    if (this._isModel(attrs)) {\n      if (!attrs.collection) attrs.collection = this;\n      return attrs;\n    }\n    options = options ? _.clone(options) : {};\n    options.collection = this;\n    var model = new this.model(attrs, options);\n    if (!model.validationError) return model;\n    this.trigger('invalid', this, model.validationError, options);\n    return false;\n  }\n\n  // Internal method called by both remove and set.\n  _removeModels(models, options) {\n    var removed = [];\n    for (var i = 0; i < models.length; i++) {\n      var model = this.get(models[i]);\n      if (!model) continue;\n\n      var index = this.indexOf(model);\n      this.models.splice(index, 1);\n      this.length--;\n\n      // Remove references before triggering 'remove' event to prevent an\n      // infinite loop. #3693\n      delete this._byId[model.cid];\n      var id = this.modelId(model.attributes);\n      if (id != null) delete this._byId[id];\n\n      if (!options.silent) {\n        options.index = index;\n        model.trigger('remove', model, this, options);\n      }\n\n      removed.push(model);\n      this._removeReference(model, options);\n    }\n    return removed;\n  }\n\n  // Method for checking whether an object should be considered a model for\n  // the purposes of adding to the collection.\n  _isModel(model) {\n    return model instanceof Model;\n  }\n\n  // Internal method to create a model's ties to a collection.\n  _addReference(model, options) {\n    this._byId[model.cid] = model;\n    var id = this.modelId(model.attributes);\n    if (id != null) this._byId[id] = model;\n    model.on('all', this._onModelEvent, this);\n  }\n\n  // Internal method to sever a model's ties to a collection.\n  _removeReference(model, options) {\n    delete this._byId[model.cid];\n    var id = this.modelId(model.attributes);\n    if (id != null) delete this._byId[id];\n    if (this === model.collection) delete model.collection;\n    model.off('all', this._onModelEvent, this);\n  }\n\n  // Internal method called every time a model in the set fires an event.\n  // Sets need to update their indexes when models change ids. All other\n  // events simply proxy through. \"add\" and \"remove\" events that originate\n  // in other collections are ignored.\n  _onModelEvent(event, model, collection, options) {\n    if (model) {\n      if ((event === 'add' || event === 'remove') && collection !== this) return;\n      if (event === 'destroy') this.remove(model, options);\n      if (event === 'change') {\n        var prevId = this.modelId(model.previousAttributes());\n        var id = this.modelId(model.attributes);\n        if (prevId !== id) {\n          if (prevId != null) delete this._byId[prevId];\n          if (id != null) this._byId[id] = model;\n        }\n      }\n    }\n    this.trigger.apply(this, arguments);\n  }\n};\n\nexport default Collection;\n","import Events from './events';\nimport View from './view';\nimport Model from './model';\nimport Collection from './collection';\n\nvar previousBackbone = root.Backbone;\n\n\nconst Backbone = {\n    VERSION: '1.3.3',\n\n    // $: $,\n    // _: _\n\n    noConflict() {\n      root.Backbone = previousBackbone;\n      return this;\n    },\n\n    emulateHTTP: false,\n    emulateJSON: false,\n\n    Events,\n    View,\n    Model,\n    Collection,\n}\n\nexport default Backbone;\n"],"names":["Model","Backbone"],"mappings":"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"}